[{"C:\\Users\\jenyf\\Desktop\\loja-teste\\src\\index.js":"1","C:\\Users\\jenyf\\Desktop\\loja-teste\\src\\App.js":"2","C:\\Users\\jenyf\\Desktop\\loja-teste\\src\\components\\confirmBuy\\confirmBuy.js":"3","C:\\Users\\jenyf\\Desktop\\loja-teste\\src\\constImages.js":"4","C:\\Users\\jenyf\\Desktop\\loja-teste\\src\\produtos.js":"5","C:\\Users\\jenyf\\Desktop\\loja-teste\\src\\store\\products\\productReducer.js":"6","C:\\Users\\jenyf\\Desktop\\loja-teste\\src\\store\\index.js":"7","C:\\Users\\jenyf\\Desktop\\loja-teste\\src\\store\\products\\productActions.js":"8","C:\\Users\\jenyf\\Desktop\\loja-teste\\src\\components\\card\\card.js":"9","C:\\Users\\jenyf\\Desktop\\loja-teste\\src\\components\\clientForm\\clientForm.js":"10"},{"size":608,"mtime":1614571717631,"results":"11","hashOfConfig":"12"},{"size":1072,"mtime":1614606531408,"results":"13","hashOfConfig":"12"},{"size":1674,"mtime":1614608146082,"results":"14","hashOfConfig":"12"},{"size":836,"mtime":1612742785895,"results":"15","hashOfConfig":"12"},{"size":1981,"mtime":1613515651304,"results":"16","hashOfConfig":"12"},{"size":842,"mtime":1614610787935,"results":"17","hashOfConfig":"12"},{"size":389,"mtime":1614548340685,"results":"18","hashOfConfig":"12"},{"size":293,"mtime":1614609068935,"results":"19","hashOfConfig":"12"},{"size":14090,"mtime":1614614274438,"results":"20","hashOfConfig":"12"},{"size":8655,"mtime":1614614869518,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1fpsdjb",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"C:\\Users\\jenyf\\Desktop\\loja-teste\\src\\index.js",[],["45","46"],"C:\\Users\\jenyf\\Desktop\\loja-teste\\src\\App.js",[],"C:\\Users\\jenyf\\Desktop\\loja-teste\\src\\components\\confirmBuy\\confirmBuy.js",[],"C:\\Users\\jenyf\\Desktop\\loja-teste\\src\\constImages.js",[],["47","48"],"C:\\Users\\jenyf\\Desktop\\loja-teste\\src\\produtos.js",[],"C:\\Users\\jenyf\\Desktop\\loja-teste\\src\\store\\products\\productReducer.js",["49","50"],"C:\\Users\\jenyf\\Desktop\\loja-teste\\src\\store\\index.js",[],"C:\\Users\\jenyf\\Desktop\\loja-teste\\src\\store\\products\\productActions.js",[],"C:\\Users\\jenyf\\Desktop\\loja-teste\\src\\components\\card\\card.js",[],"C:\\Users\\jenyf\\Desktop\\loja-teste\\src\\components\\clientForm\\clientForm.js",["51"],"import React, { Fragment } from \"react\";\r\nimport \"./clientForm.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport { connect } from \"react-redux\";\r\nimport Media from \"react-media\";\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  const requiredFields = [\"nome\", \"email\", \"sexo\"];\r\n  requiredFields.forEach((field) => {\r\n    if (!values[field]) {\r\n      errors[field] = \"Campo obrigatório\";\r\n    }\r\n  });\r\n  if (\r\n    values.email &&\r\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n  ) {\r\n    errors.email = \"Email inválido\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst renderTextField = ({\r\n  label,\r\n  input,\r\n  placeholder,\r\n  meta: { touched, invalid, error },\r\n}) => (\r\n  <TextField\r\n    id=\"outlined\"\r\n    label={label}\r\n    placeholder={placeholder}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    variant=\"outlined\"\r\n    className=\"input\"\r\n    {...input}\r\n  />\r\n);\r\n\r\nconst renderSelectField = ({\r\n  input,\r\n  label,\r\n  meta: { touched, error },\r\n  children,\r\n}) => (\r\n  <FormControl>\r\n    <InputLabel htmlFor=\"color-native-simple\">{label}</InputLabel>\r\n    <Select\r\n      native\r\n      {...input}\r\n      inputProps={{\r\n        name: input.name,\r\n        id: \"color-native-simple\",\r\n      }}\r\n    >\r\n      {children}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n);\r\n\r\nconst renderFromHelper = ({ touched, error }) => {\r\n  if (!(touched && error)) {\r\n    return;\r\n  } else {\r\n    return <FormHelperText>{touched && error}</FormHelperText>;\r\n  }\r\n};\r\n\r\nfunction decimalFix(value) {\r\n  return value.toFixed(2);\r\n}\r\n\r\nfunction ClientForm(props) {\r\n  const { handleSubmit, pristine, totalCart, submitting, valid } = props;\r\n  return (\r\n    <div>\r\n      <Media\r\n        queries={{\r\n          small: \"(min-width: 320px) and (max-width: 719px)\",\r\n          medium: \"(min-width: 720px) and (max-width: 1139px)\",\r\n          large: \"(min-width: 1140px)\",\r\n        }}\r\n      >\r\n        {(matches) => (\r\n          <Fragment>\r\n            {matches.small && (\r\n              <div>\r\n                <h3>Dados do Cliente</h3>\r\n                <hr></hr>\r\n                <form\r\n                  className=\"formControl\"\r\n                  autoComplete=\"off\"\r\n                  onSubmit={handleSubmit}\r\n                  style={{display: \"inline\"}}\r\n                >\r\n                  <div className=\"space-between\">\r\n                    <Field\r\n                      name=\"nome\"\r\n                      label=\"Nome\"\r\n                      placeholder=\"Nome do cliente aqui\"\r\n                      component={renderTextField}\r\n                    />\r\n                  </div>\r\n                  <div className=\"space-between\">\r\n                    <Field\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Digite seu email aqui\"\r\n                      component={renderTextField}\r\n                    />\r\n                  </div>\r\n                  <div className=\"space-between\">\r\n                    <Field\r\n                      name=\"sexo\"\r\n                      component={renderSelectField}\r\n                      label=\"Sexo\"\r\n                    >\r\n                      <option value=\"\" />\r\n                      <option value={\"Feminino\"}>Feminino</option>\r\n                      <option value={\"Masculino\"}>Masculino</option>\r\n                    </Field>\r\n                  </div>\r\n                </form>\r\n                <div className=\"footer\">\r\n                  <h2>Total: R${decimalFix(totalCart)}</h2>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    id=\"finalButton\"\r\n                    type=\"submit\"\r\n                    disabled={pristine || submitting || !valid}\r\n                  >\r\n                    <Link to=\"/confirm-buy\" id=\"link\">\r\n                      Finalizar Compra\r\n                    </Link>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {matches.medium && (\r\n              <div>\r\n                <h3>Dados do Cliente</h3>\r\n                <hr></hr>\r\n                <form\r\n                  className=\"formControl\"\r\n                  autoComplete=\"off\"\r\n                  onSubmit={handleSubmit}\r\n                  style={{display: \"inline-grid\", gridTemplateColumns: \"auto auto\"}}\r\n                >\r\n                  <div className=\"space-between\">\r\n                    <Field\r\n                      name=\"nome\"\r\n                      label=\"Nome\"\r\n                      placeholder=\"Nome do cliente aqui\"\r\n                      component={renderTextField}\r\n                    />\r\n                  </div>\r\n                  <div className=\"space-between\">\r\n                    <Field\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Digite seu email aqui\"\r\n                      component={renderTextField}\r\n                    />\r\n                  </div>\r\n                  <div className=\"space-between\">\r\n                    <Field\r\n                      name=\"sexo\"\r\n                      component={renderSelectField}\r\n                      label=\"Sexo\"\r\n                    >\r\n                      <option value=\"\" />\r\n                      <option value={\"Feminino\"}>Feminino</option>\r\n                      <option value={\"Masculino\"}>Masculino</option>\r\n                    </Field>\r\n                  </div>\r\n                </form>\r\n                <div className=\"footer\">\r\n                  <h2>Total: R${decimalFix(totalCart)}</h2>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    id=\"finalButton\"\r\n                    type=\"submit\"\r\n                    disabled={pristine || submitting || !valid}\r\n                  >\r\n                    <Link to=\"/confirm-buy\" id=\"link\">\r\n                      Finalizar Compra\r\n                    </Link>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {matches.large && (\r\n              <div>\r\n                <h3>Dados do Cliente</h3>\r\n                <hr></hr>\r\n                <form\r\n                  className=\"formControl\"\r\n                  autoComplete=\"off\"\r\n                  onSubmit={handleSubmit}\r\n                >\r\n                  <div className=\"space-between\">\r\n                    <Field\r\n                      name=\"nome\"\r\n                      label=\"Nome\"\r\n                      placeholder=\"Nome do cliente aqui\"\r\n                      component={renderTextField}\r\n                    />\r\n                  </div>\r\n                  <div className=\"space-between\">\r\n                    <Field\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Digite seu email aqui\"\r\n                      component={renderTextField}\r\n                    />\r\n                  </div>\r\n                  <div className=\"space-between\">\r\n                    <Field\r\n                      name=\"sexo\"\r\n                      component={renderSelectField}\r\n                      label=\"Sexo\"\r\n                    >\r\n                      <option value=\"\" />\r\n                      <option value={\"Feminino\"}>Feminino</option>\r\n                      <option value={\"Masculino\"}>Masculino</option>\r\n                    </Field>\r\n                  </div>\r\n                </form>\r\n                <div className=\"footer\">\r\n                  <h2>Total: R${decimalFix(totalCart)}</h2>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    id=\"finalButton\"\r\n                    type=\"submit\"\r\n                    disabled={pristine || submitting || !valid}\r\n                  >\r\n                    <Link to=\"/confirm-buy\" id=\"link\">\r\n                      Finalizar Compra\r\n                    </Link>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </Media>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  totalCart: state.productReducer.totalCart,\r\n});\r\n\r\nClientForm = reduxForm({\r\n  form: \"clientForm\",\r\n  validate,\r\n})(ClientForm);\r\n\r\nexport default connect(mapStateToProps)(ClientForm);\r\n",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"52","replacedBy":"56"},{"ruleId":"54","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":25,"column":5,"nodeType":"60","messageId":"61","endLine":31,"endColumn":8},{"ruleId":"58","severity":1,"message":"62","line":32,"column":5,"nodeType":"60","messageId":"63","endLine":33,"endColumn":20},{"ruleId":"64","severity":1,"message":"65","line":266,"column":1,"nodeType":"66","messageId":"67","endLine":266,"endColumn":11},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],["68"],["69"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected a 'break' statement before 'default'.","default","no-func-assign","'ClientForm' is a function.","Identifier","isAFunction","no-global-assign","no-unsafe-negation"]